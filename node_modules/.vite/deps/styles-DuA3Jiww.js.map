{"version":3,"file":"styles-DuA3Jiww.js","names":["PropTypes","useThemeProps","useTheme","warnedOnce","systemUseThemeProps","THEME_ID","THEME_ID","SystemThemeProvider","InitColorSchemeScript","SystemInitColorSchemeScript","PropTypes","THEME_ID","styleFunctionSx","warnedOnce","THEME_ID","extendTheme"],"sources":["../../@mui/styled-engine/esm/StyledEngineProvider/StyledEngineProvider.js","../../@mui/system/esm/useThemeProps/getThemeProps.js","../../@mui/system/esm/useThemeProps/useThemeProps.js","../../@mui/material/esm/styles/adaptV4Theme.js","../../@mui/material/esm/styles/createMuiStrictModeTheme.js","../../@mui/material/esm/styles/createStyles.js","../../@mui/material/esm/styles/cssUtils.js","../../@mui/material/esm/styles/responsiveFontSizes.js","../../@mui/material/esm/styles/useThemeProps.js","../../@mui/material/esm/styles/ThemeProviderNoVars.js","../../@mui/material/esm/InitColorSchemeScript/InitColorSchemeScript.js","../../@mui/material/esm/styles/ThemeProviderWithVars.js","../../@mui/material/esm/styles/ThemeProvider.js","../../@mui/material/esm/styles/makeStyles.js","../../@mui/material/esm/styles/withStyles.js","../../@mui/material/esm/styles/withTheme.js","../../@mui/material/esm/styles/experimental_extendTheme.js","../../@mui/material/esm/styles/index.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { StyleSheet } from '@emotion/sheet';\n\n// To fix [Jest performance](https://github.com/mui/material-ui/issues/45638).\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst cacheMap = new Map();\n\n// Need to add a private variable to test the generated CSS from Emotion, this is the simplest way to do it.\n// We can't test the CSS from `style` tag easily because the `speedy: true` (produce empty text content) is enabled by Emotion.\n// Even if we disable it, JSDOM needs extra configuration to be able to parse `@layer` CSS.\nexport const TEST_INTERNALS_DO_NOT_USE = {\n  /**\n   * to intercept the generated CSS before inserting to the style tag, so that we can check the generated CSS.\n   *\n   * let rule;\n   * TEST_INTERNALS_DO_NOT_USE.insert = (...args) => {\n   *    rule = args[0];\n   * };\n   *\n   * expect(rule).to.equal(...);\n   */\n  insert: undefined\n};\n\n// We might be able to remove this when this issue is fixed:\n// https://github.com/emotion-js/emotion/issues/2790\nconst createEmotionCache = (options, CustomSheet) => {\n  const cache = createCache(options);\n\n  // Do the same as https://github.com/emotion-js/emotion/blob/main/packages/cache/src/index.js#L238-L245\n  cache.sheet = new CustomSheet({\n    key: cache.key,\n    nonce: cache.sheet.nonce,\n    container: cache.sheet.container,\n    speedy: cache.sheet.isSpeedy,\n    prepend: cache.sheet.prepend,\n    insertionPoint: cache.sheet.insertionPoint\n  });\n  return cache;\n};\nlet insertionPoint;\nif (typeof document === 'object') {\n  // Use `insertionPoint` over `prepend`(deprecated) because it can be controlled for GlobalStyles injection order\n  // For more information, see https://github.com/mui/material-ui/issues/44597\n  insertionPoint = document.querySelector('[name=\"emotion-insertion-point\"]');\n  if (!insertionPoint) {\n    insertionPoint = document.createElement('meta');\n    insertionPoint.setAttribute('name', 'emotion-insertion-point');\n    insertionPoint.setAttribute('content', '');\n    const head = document.querySelector('head');\n    if (head) {\n      head.prepend(insertionPoint);\n    }\n  }\n}\nfunction getCache(injectFirst, enableCssLayer) {\n  if (injectFirst || enableCssLayer) {\n    /**\n     * This is for client-side apps only.\n     * A custom sheet is required to make the GlobalStyles API injected above the insertion point.\n     * This is because the [sheet](https://github.com/emotion-js/emotion/blob/main/packages/react/src/global.js#L94-L99) does not consume the options.\n     */\n    class MyStyleSheet extends StyleSheet {\n      insert(rule, options) {\n        if (TEST_INTERNALS_DO_NOT_USE.insert) {\n          return TEST_INTERNALS_DO_NOT_USE.insert(rule, options);\n        }\n        if (this.key && this.key.endsWith('global')) {\n          this.before = insertionPoint;\n        }\n        return super.insert(rule, options);\n      }\n    }\n    const emotionCache = createEmotionCache({\n      key: 'css',\n      insertionPoint: injectFirst ? insertionPoint : undefined\n    }, MyStyleSheet);\n    if (enableCssLayer) {\n      const prevInsert = emotionCache.insert;\n      emotionCache.insert = (...args) => {\n        if (!args[1].styles.match(/^@layer\\s+[^{]*$/)) {\n          // avoid nested @layer\n          args[1].styles = `@layer mui {${args[1].styles}}`;\n        }\n        return prevInsert(...args);\n      };\n    }\n    return emotionCache;\n  }\n  return undefined;\n}\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    enableCssLayer,\n    children\n  } = props;\n  const cache = React.useMemo(() => {\n    const cacheKey = `${injectFirst}-${enableCssLayer}`;\n    if (typeof document === 'object' && cacheMap.has(cacheKey)) {\n      return cacheMap.get(cacheKey);\n    }\n    const fresh = getCache(injectFirst, enableCssLayer);\n    cacheMap.set(cacheKey, fresh);\n    return fresh;\n  }, [injectFirst, enableCssLayer]);\n  return cache ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the styles are wrapped in `@layer mui`.\n   * Learn more about [Cascade layers](https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Styling_basics/Cascade_layers).\n   */\n  enableCssLayer: PropTypes.bool,\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;","import resolveProps from '@mui/utils/resolveProps';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}","'use client';\n\nimport { createBreakpoints, createSpacing } from '@mui/system';\nexport default function adaptV4Theme(inputTheme) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(['MUI: adaptV4Theme() is deprecated.', 'Follow the upgrade guide on https://mui.com/r/migration-v4#theme.'].join('\\n'));\n  }\n  const {\n    defaultProps = {},\n    mixins = {},\n    overrides = {},\n    palette = {},\n    props = {},\n    styleOverrides = {},\n    ...other\n  } = inputTheme;\n  const theme = {\n    ...other,\n    components: {}\n  };\n\n  // default props\n  Object.keys(defaultProps).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = defaultProps[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(props).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = props[component];\n    theme.components[component] = componentValue;\n  });\n\n  // CSS overrides\n  Object.keys(styleOverrides).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = styleOverrides[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(overrides).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = overrides[component];\n    theme.components[component] = componentValue;\n  });\n\n  // theme.spacing\n  theme.spacing = createSpacing(inputTheme.spacing);\n\n  // theme.mixins.gutters\n  const breakpoints = createBreakpoints(inputTheme.breakpoints || {});\n  const spacing = theme.spacing;\n  theme.mixins = {\n    gutters: (styles = {}) => {\n      return {\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2),\n        ...styles,\n        [breakpoints.up('sm')]: {\n          paddingLeft: spacing(3),\n          paddingRight: spacing(3),\n          ...styles[breakpoints.up('sm')]\n        }\n      };\n    },\n    ...mixins\n  };\n  const {\n    type: typeInput,\n    mode: modeInput,\n    ...paletteRest\n  } = palette;\n  const finalMode = modeInput || typeInput || 'light';\n  theme.palette = {\n    // theme.palette.text.hint\n    text: {\n      hint: finalMode === 'dark' ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.38)'\n    },\n    mode: finalMode,\n    type: finalMode,\n    ...paletteRest\n  };\n  return theme;\n}","import deepmerge from '@mui/utils/deepmerge';\nimport createTheme from \"./createTheme.js\";\nexport default function createMuiStrictModeTheme(options, ...args) {\n  return createTheme(deepmerge({\n    unstable_strictMode: true\n  }, options), ...args);\n}","let warnedOnce = false;\n\n// To remove in v6\nexport default function createStyles(styles) {\n  if (!warnedOnce) {\n    console.warn(['MUI: createStyles from @mui/material/styles is deprecated.', 'Please use @mui/styles/createStyles'].join('\\n'));\n    warnedOnce = true;\n  }\n  return styles;\n}","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import _formatErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from \"./cssUtils.js\";\nexport default function responsiveFontSizes(themeInput, options = {}) {\n  const {\n    breakpoints = ['sm', 'md', 'lg'],\n    disableAlign = false,\n    factor = 2,\n    variants = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline']\n  } = options;\n  const theme = {\n    ...themeInput\n  };\n  theme.typography = {\n    ...theme.typography\n  };\n  const typography = theme.typography;\n\n  // Convert between CSS lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n  const convert = convertLength(typography.htmlFontSize);\n  const breakpointValues = breakpoints.map(x => theme.breakpoints.values[x]);\n  variants.forEach(variant => {\n    const style = typography[variant];\n    if (!style) {\n      return;\n    }\n    const remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n    if (remFontSize <= 1) {\n      return;\n    }\n    const maxFontSize = remFontSize;\n    const minFontSize = 1 + (maxFontSize - 1) / factor;\n    let {\n      lineHeight\n    } = style;\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: Unsupported non-unitless line height with grid alignment.\\n' + 'Use unitless line heights instead.' : _formatErrorMessage(6));\n    }\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n    let transform = null;\n    if (!disableAlign) {\n      transform = value => alignProperty({\n        size: value,\n        grid: fontGrid({\n          pixels: 4,\n          lineHeight,\n          htmlFontSize: typography.htmlFontSize\n        })\n      });\n    }\n    typography[variant] = {\n      ...style,\n      ...responsiveProperty({\n        cssProperty: 'fontSize',\n        min: minFontSize,\n        max: maxFontSize,\n        unit: 'rem',\n        breakpoints: breakpointValues,\n        transform\n      })\n    };\n  });\n  return theme;\n}","'use client';\n\nimport systemUseThemeProps from '@mui/system/useThemeProps';\nimport defaultTheme from \"./defaultTheme.js\";\nimport THEME_ID from \"./identifier.js\";\nexport default function useThemeProps({\n  props,\n  name\n}) {\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme,\n    themeId: THEME_ID\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from \"./identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProviderNoVars({\n  theme: themeInput,\n  ...props\n}) {\n  const scopedTheme = THEME_ID in themeInput ? themeInput[THEME_ID] : undefined;\n  return /*#__PURE__*/_jsx(SystemThemeProvider, {\n    ...props,\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  });\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport SystemInitColorSchemeScript from '@mui/system/InitColorSchemeScript';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const defaultConfig = {\n  attribute: 'data-mui-color-scheme',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultLightColorScheme: 'light',\n  defaultDarkColorScheme: 'dark',\n  modeStorageKey: 'mui-mode'\n};\n/**\n *\n * Demos:\n *\n * - [InitColorSchemeScript](https://mui.com/material-ui/react-init-color-scheme-script/)\n *\n * API:\n *\n * - [InitColorSchemeScript API](https://mui.com/material-ui/api/init-color-scheme-script/)\n */\nfunction InitColorSchemeScript(props) {\n  const {\n    defaultMode = 'system',\n    defaultLightColorScheme = defaultConfig.defaultLightColorScheme,\n    defaultDarkColorScheme = defaultConfig.defaultDarkColorScheme,\n    modeStorageKey = defaultConfig.modeStorageKey,\n    colorSchemeStorageKey = defaultConfig.colorSchemeStorageKey,\n    attribute: initialAttribute = defaultConfig.attribute,\n    colorSchemeNode = 'document.documentElement',\n    nonce\n  } = props;\n  return /*#__PURE__*/_jsx(SystemInitColorSchemeScript, {\n    defaultMode: defaultMode,\n    defaultLightColorScheme: defaultLightColorScheme,\n    defaultDarkColorScheme: defaultDarkColorScheme,\n    modeStorageKey: modeStorageKey,\n    colorSchemeStorageKey: colorSchemeStorageKey,\n    attribute: initialAttribute,\n    colorSchemeNode: colorSchemeNode,\n    nonce: nonce\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? InitColorSchemeScript.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * DOM attribute for applying a color scheme.\n   * @default 'data-mui-color-scheme'\n   * @example '.mode-%s' // for class based color scheme\n   * @example '[data-mode-%s]' // for data-attribute without '='\n   */\n  attribute: PropTypes.string,\n  /**\n   * The node (provided as string) used to attach the color-scheme attribute.\n   * @default 'document.documentElement'\n   */\n  colorSchemeNode: PropTypes.string,\n  /**\n   * localStorage key used to store `colorScheme`.\n   * @default 'mui-color-scheme'\n   */\n  colorSchemeStorageKey: PropTypes.string,\n  /**\n   * The default color scheme to be used in dark mode.\n   * @default 'dark'\n   */\n  defaultDarkColorScheme: PropTypes.string,\n  /**\n   * The default color scheme to be used in light mode.\n   * @default 'light'\n   */\n  defaultLightColorScheme: PropTypes.string,\n  /**\n   * The default mode when the storage is empty (user's first visit).\n   * @default 'system'\n   */\n  defaultMode: PropTypes.oneOf(['dark', 'light', 'system']),\n  /**\n   * localStorage key used to store `mode`.\n   * @default 'mui-mode'\n   */\n  modeStorageKey: PropTypes.string,\n  /**\n   * Nonce string to pass to the inline script for CSP headers.\n   */\n  nonce: PropTypes.string\n} : void 0;\nexport default InitColorSchemeScript;","'use client';\n\nimport * as React from 'react';\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport createTheme from \"./createTheme.js\";\nimport createTypography from \"./createTypography.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { defaultConfig } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst {\n  CssVarsProvider: InternalCssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript: deprecatedGetInitColorSchemeScript\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  // @ts-ignore ignore module augmentation tests\n  theme: () => createTheme({\n    cssVariables: true\n  }),\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\n  modeStorageKey: defaultConfig.modeStorageKey,\n  defaultColorScheme: {\n    light: defaultConfig.defaultLightColorScheme,\n    dark: defaultConfig.defaultDarkColorScheme\n  },\n  resolveTheme: theme => {\n    const newTheme = {\n      ...theme,\n      typography: createTypography(theme.palette, theme.typography)\n    };\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n    return newTheme;\n  }\n});\nlet warnedOnce = false;\n\n// TODO: remove in v7\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction Experimental_CssVarsProvider(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      console.warn(['MUI: The Experimental_CssVarsProvider component has been ported into ThemeProvider.', '', \"You should use `import { ThemeProvider } from '@mui/material/styles'` instead.\", 'For more details, check out https://mui.com/material-ui/customization/css-theme-variables/usage/'].join('\\n'));\n      warnedOnce = true;\n    }\n  }\n  return /*#__PURE__*/_jsx(InternalCssVarsProvider, {\n    ...props\n  });\n}\nlet warnedInitScriptOnce = false;\n\n// TODO: remove in v7\nconst getInitColorSchemeScript = params => {\n  if (!warnedInitScriptOnce) {\n    console.warn(['MUI: The getInitColorSchemeScript function has been deprecated.', '', \"You should use `import InitColorSchemeScript from '@mui/material/InitColorSchemeScript'`\", 'and replace the function call with `<InitColorSchemeScript />` instead.'].join('\\n'));\n    warnedInitScriptOnce = true;\n  }\n  return deprecatedGetInitColorSchemeScript(params);\n};\n\n/**\n * TODO: remove this export in v7\n * @deprecated\n * The `CssVarsProvider` component has been deprecated and ported into `ThemeProvider`.\n *\n * You should use `ThemeProvider` and `createTheme()` instead:\n *\n * ```diff\n * - import { CssVarsProvider, extendTheme } from '@mui/material/styles';\n * + import { ThemeProvider, createTheme } from '@mui/material/styles';\n *\n * - const theme = extendTheme();\n * + const theme = createTheme({\n * +   cssVariables: true,\n * +   colorSchemes: { light: true, dark: true },\n * + });\n *\n * - <CssVarsProvider theme={theme}>\n * + <ThemeProvider theme={theme}>\n * ```\n *\n * To see the full documentation, check out https://mui.com/material-ui/customization/css-theme-variables/usage/.\n */\nexport const CssVarsProvider = InternalCssVarsProvider;\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };","'use client';\n\nimport * as React from 'react';\nimport ThemeProviderNoVars from \"./ThemeProviderNoVars.js\";\nimport { CssVarsProvider } from \"./ThemeProviderWithVars.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider({\n  theme,\n  ...props\n}) {\n  const noVarsTheme = React.useMemo(() => {\n    if (typeof theme === 'function') {\n      return theme;\n    }\n    const muiTheme = THEME_ID in theme ? theme[THEME_ID] : theme;\n    if (!('colorSchemes' in muiTheme)) {\n      if (!('vars' in muiTheme)) {\n        // For non-CSS variables themes, set `vars` to null to prevent theme inheritance from the upper theme.\n        // The example use case is the docs demo that uses ThemeProvider to customize the theme while the upper theme is using CSS variables.\n        return {\n          ...theme,\n          vars: null\n        };\n      }\n      return theme;\n    }\n    return null;\n  }, [theme]);\n  if (noVarsTheme) {\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: noVarsTheme,\n      ...props\n    });\n  }\n  return /*#__PURE__*/_jsx(CssVarsProvider, {\n    theme: theme,\n    ...props\n  });\n}","import _formatErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nexport default function makeStyles() {\n  throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: makeStyles is no longer exported from @mui/material/styles.\\n' + 'You have to import it from @mui/styles.\\n' + 'See https://mui.com/r/migration-v4/#mui-material-styles for more details.' : _formatErrorMessage(14));\n}","import _formatErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nexport default function withStyles() {\n  throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: withStyles is no longer exported from @mui/material/styles.\\n' + 'You have to import it from @mui/styles.\\n' + 'See https://mui.com/r/migration-v4/#mui-material-styles for more details.' : _formatErrorMessage(15));\n}","import _formatErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nexport default function withTheme() {\n  throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: withTheme is no longer exported from @mui/material/styles.\\n' + 'You have to import it from @mui/styles.\\n' + 'See https://mui.com/r/migration-v4/#mui-material-styles for more details.' : _formatErrorMessage(16));\n}","import extendTheme from \"./createThemeWithVars.js\";\nlet warnedOnce = false;\nexport default function deprecatedExtendTheme(...args) {\n  if (!warnedOnce) {\n    console.warn(['MUI: The `experimental_extendTheme` has been stabilized.', '', \"You should use `import { extendTheme } from '@mui/material/styles'`\"].join('\\n'));\n    warnedOnce = true;\n  }\n  return extendTheme(...args);\n}","import _formatErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nexport { default as THEME_ID } from \"./identifier.js\";\nexport { default as adaptV4Theme } from \"./adaptV4Theme.js\";\nexport { hexToRgb, rgbToHex, hslToRgb, decomposeColor, recomposeColor, getContrastRatio, getLuminance, emphasize, alpha, darken, lighten, css, keyframes } from '@mui/system';\nexport { unstable_createBreakpoints } from '@mui/system/createBreakpoints';\n// TODO: Remove this function in v6.\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function experimental_sx() {\n  throw new Error(process.env.NODE_ENV !== \"production\" ? 'MUI: The `experimental_sx` has been moved to `theme.unstable_sx`.' + 'For more details, see https://github.com/mui/material-ui/pull/35150.' : _formatErrorMessage(19));\n}\nexport { default as createTheme } from \"./createTheme.js\";\nexport { default as unstable_createMuiStrictModeTheme } from \"./createMuiStrictModeTheme.js\";\nexport { default as createStyles } from \"./createStyles.js\";\nexport { getUnit as unstable_getUnit, toUnitless as unstable_toUnitless } from \"./cssUtils.js\";\nexport { default as responsiveFontSizes } from \"./responsiveFontSizes.js\";\nexport { default as createTransitions, duration, easing } from \"./createTransitions.js\";\nexport { default as createColorScheme } from \"./createColorScheme.js\";\nexport { default as useTheme } from \"./useTheme.js\";\nexport { default as useThemeProps } from \"./useThemeProps.js\";\nexport { default as styled } from \"./styled.js\";\nexport { default as ThemeProvider } from \"./ThemeProvider.js\";\nexport { StyledEngineProvider } from '@mui/system';\n// The legacy utilities from @mui/styles\n// These are just empty functions that throws when invoked\nexport { default as makeStyles } from \"./makeStyles.js\";\nexport { default as withStyles } from \"./withStyles.js\";\nexport { default as withTheme } from \"./withTheme.js\";\nexport * from \"./ThemeProviderWithVars.js\";\nexport { default as extendTheme } from \"./createThemeWithVars.js\";\nexport { default as experimental_extendTheme } from \"./experimental_extendTheme.js\"; // TODO: Remove in v7\nexport { default as getOverlayAlpha } from \"./getOverlayAlpha.js\";\nexport { default as shouldSkipGeneratingVar } from \"./shouldSkipGeneratingVar.js\";\n\n// Private methods for creating parts of the theme\nexport { default as private_createTypography } from \"./createTypography.js\";\nexport { default as private_createMixins } from \"./createMixins.js\";\nexport { default as private_excludeVariablesFromRoot } from \"./excludeVariablesFromRoot.js\";"],"mappings":"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"}