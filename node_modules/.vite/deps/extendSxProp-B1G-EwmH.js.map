{"version":3,"file":"extendSxProp-B1G-EwmH.js","names":["defaultSxConfig"],"sources":["../../@mui/system/esm/styleFunctionSx/extendSxProp.js"],"sourcesContent":["import { isPlainObject } from '@mui/utils/deepmerge';\nimport defaultSxConfig from \"./defaultSxConfig.js\";\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = props?.theme?.unstable_sxConfig ?? defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n    sx: inSx,\n    ...other\n  } = props;\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return {\n        ...systemProps,\n        ...result\n      };\n    };\n  } else {\n    finalSx = {\n      ...systemProps,\n      ...inSx\n    };\n  }\n  return {\n    ...otherProps,\n    sx: finalSx\n  };\n}"],"mappings":";;;AAEA,IAAM,cAAa,UAAS;CAC1B,MAAM,SAAS;EACb,aAAa,EAAE;EACf,YAAY,EAAE;EACf;CACD,MAAM,SAAS,OAAO,OAAO,qBAAqBA;AAClD,QAAO,KAAK,MAAM,CAAC,SAAQ,SAAQ;AACjC,MAAI,OAAO,MACT,QAAO,YAAY,QAAQ,MAAM;MAEjC,QAAO,WAAW,QAAQ,MAAM;GAElC;AACF,QAAO;;AAET,SAAwB,aAAa,OAAO;CAC1C,MAAM,EACJ,IAAI,KACJ,GAAG,UACD;CACJ,MAAM,EACJ,aACA,eACE,WAAW,MAAM;CACrB,IAAI;AACJ,KAAI,MAAM,QAAQ,KAAK,CACrB,WAAU,CAAC,aAAa,GAAG,KAAK;UACvB,OAAO,SAAS,WACzB,YAAW,GAAG,SAAS;EACrB,MAAM,SAAS,KAAK,GAAG,KAAK;AAC5B,MAAI,CAAC,cAAc,OAAO,CACxB,QAAO;AAET,SAAO;GACL,GAAG;GACH,GAAG;GACJ;;KAGH,WAAU;EACR,GAAG;EACH,GAAG;EACJ;AAEH,QAAO;EACL,GAAG;EACH,IAAI;EACL"}