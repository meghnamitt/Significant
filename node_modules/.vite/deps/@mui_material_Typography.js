import { __toESM } from "./chunk-DbKvDyjX.js";
import { require_react } from "./react-C7PpavTg.js";
import { clsx_default, generateUtilityClass, require_prop_types, styled_default } from "./styled-DSC9b8yd.js";
import "./extendSxProp-B1G-EwmH.js";
import { require_jsx_runtime } from "./jsx-runtime-1KWngW6r.js";
import { generateUtilityClasses } from "./generateUtilityClasses-BT0y0Irq.js";
import { composeClasses, memoTheme_default } from "./memoTheme-BYeIX1IO.js";
import { internal_createExtendSxProp, useDefaultProps } from "./DefaultPropsProvider-C6O5LObd.js";
import { capitalize_default, createSimplePaletteValueFilter } from "./createSimplePaletteValueFilter-BBr3tZ0I.js";

//#region node_modules/@mui/material/esm/Typography/typographyClasses.js
var import_prop_types = /* @__PURE__ */ __toESM(require_prop_types(), 1);
var import_react = /* @__PURE__ */ __toESM(require_react(), 1);
function getTypographyUtilityClass(slot) {
	return generateUtilityClass("MuiTypography", slot);
}
var typographyClasses = generateUtilityClasses("MuiTypography", [
	"root",
	"h1",
	"h2",
	"h3",
	"h4",
	"h5",
	"h6",
	"subtitle1",
	"subtitle2",
	"body1",
	"body2",
	"inherit",
	"button",
	"caption",
	"overline",
	"alignLeft",
	"alignRight",
	"alignCenter",
	"alignJustify",
	"noWrap",
	"gutterBottom",
	"paragraph"
]);
var typographyClasses_default = typographyClasses;

//#endregion
//#region node_modules/@mui/material/esm/Typography/Typography.js
var import_jsx_runtime = /* @__PURE__ */ __toESM(require_jsx_runtime(), 1);
var v6Colors = {
	primary: true,
	secondary: true,
	error: true,
	info: true,
	success: true,
	warning: true,
	textPrimary: true,
	textSecondary: true,
	textDisabled: true
};
var extendSxProp = internal_createExtendSxProp();
var useUtilityClasses = (ownerState) => {
	const { align, gutterBottom, noWrap, paragraph, variant, classes } = ownerState;
	const slots = { root: [
		"root",
		variant,
		ownerState.align !== "inherit" && `align${capitalize_default(align)}`,
		gutterBottom && "gutterBottom",
		noWrap && "noWrap",
		paragraph && "paragraph"
	] };
	return composeClasses(slots, getTypographyUtilityClass, classes);
};
const TypographyRoot = styled_default("span", {
	name: "MuiTypography",
	slot: "Root",
	overridesResolver: (props, styles) => {
		const { ownerState } = props;
		return [
			styles.root,
			ownerState.variant && styles[ownerState.variant],
			ownerState.align !== "inherit" && styles[`align${capitalize_default(ownerState.align)}`],
			ownerState.noWrap && styles.noWrap,
			ownerState.gutterBottom && styles.gutterBottom,
			ownerState.paragraph && styles.paragraph
		];
	}
})(memoTheme_default(({ theme }) => ({
	margin: 0,
	variants: [
		{
			props: { variant: "inherit" },
			style: {
				font: "inherit",
				lineHeight: "inherit",
				letterSpacing: "inherit"
			}
		},
		...Object.entries(theme.typography).filter(([variant, value]) => variant !== "inherit" && value && typeof value === "object").map(([variant, value]) => ({
			props: { variant },
			style: value
		})),
		...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({
			props: { color },
			style: { color: (theme.vars || theme).palette[color].main }
		})),
		...Object.entries(theme.palette?.text || {}).filter(([, value]) => typeof value === "string").map(([color]) => ({
			props: { color: `text${capitalize_default(color)}` },
			style: { color: (theme.vars || theme).palette.text[color] }
		})),
		{
			props: ({ ownerState }) => ownerState.align !== "inherit",
			style: { textAlign: "var(--Typography-textAlign)" }
		},
		{
			props: ({ ownerState }) => ownerState.noWrap,
			style: {
				overflow: "hidden",
				textOverflow: "ellipsis",
				whiteSpace: "nowrap"
			}
		},
		{
			props: ({ ownerState }) => ownerState.gutterBottom,
			style: { marginBottom: "0.35em" }
		},
		{
			props: ({ ownerState }) => ownerState.paragraph,
			style: { marginBottom: 16 }
		}
	]
})));
var defaultVariantMapping = {
	h1: "h1",
	h2: "h2",
	h3: "h3",
	h4: "h4",
	h5: "h5",
	h6: "h6",
	subtitle1: "h6",
	subtitle2: "h6",
	body1: "p",
	body2: "p",
	inherit: "p"
};
var Typography = /* @__PURE__ */ import_react.forwardRef(function Typography$1(inProps, ref) {
	const { color,...themeProps } = useDefaultProps({
		props: inProps,
		name: "MuiTypography"
	});
	const isSxColor = !v6Colors[color];
	const props = extendSxProp({
		...themeProps,
		...isSxColor && { color }
	});
	const { align = "inherit", className, component, gutterBottom = false, noWrap = false, paragraph = false, variant = "body1", variantMapping = defaultVariantMapping,...other } = props;
	const ownerState = {
		...props,
		align,
		color,
		className,
		component,
		gutterBottom,
		noWrap,
		paragraph,
		variant,
		variantMapping
	};
	const Component = component || (paragraph ? "p" : variantMapping[variant] || defaultVariantMapping[variant]) || "span";
	const classes = useUtilityClasses(ownerState);
	return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(TypographyRoot, {
		as: Component,
		ref,
		className: clsx_default(classes.root, className),
		...other,
		ownerState,
		style: {
			...align !== "inherit" && { "--Typography-textAlign": align },
			...other.style
		}
	});
});
Typography.propTypes = {
	align: import_prop_types.default.oneOf([
		"center",
		"inherit",
		"justify",
		"left",
		"right"
	]),
	children: import_prop_types.default.node,
	classes: import_prop_types.default.object,
	className: import_prop_types.default.string,
	color: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([
		"primary",
		"secondary",
		"success",
		"error",
		"info",
		"warning",
		"textPrimary",
		"textSecondary",
		"textDisabled"
	]), import_prop_types.default.string]),
	component: import_prop_types.default.elementType,
	gutterBottom: import_prop_types.default.bool,
	noWrap: import_prop_types.default.bool,
	paragraph: import_prop_types.default.bool,
	style: import_prop_types.default.object,
	sx: import_prop_types.default.oneOfType([
		import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([
			import_prop_types.default.func,
			import_prop_types.default.object,
			import_prop_types.default.bool
		])),
		import_prop_types.default.func,
		import_prop_types.default.object
	]),
	variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([
		"body1",
		"body2",
		"button",
		"caption",
		"h1",
		"h2",
		"h3",
		"h4",
		"h5",
		"h6",
		"inherit",
		"overline",
		"subtitle1",
		"subtitle2"
	]), import_prop_types.default.string]),
	variantMapping: import_prop_types.default.object
};
var Typography_default = Typography;

//#endregion
export { Typography_default as default, getTypographyUtilityClass, typographyClasses_default as typographyClasses };
//# sourceMappingURL=@mui_material_Typography.js.map